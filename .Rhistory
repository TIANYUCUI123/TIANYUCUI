cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
#raarrange database to prepare for merge#
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
View(size)
View(cutoff)
View(size)
sss2<-cbind(cutoff,quality,size,by"schoolcode")
sss2<-cbind(cutoff,quality,size,by "schoolcode")
sss2<-cbind(cutoff,quality,size)
View(sss2)
sss2<-merge(cutoff,quality,size,by"schoolcode")
sss2<-merge(cutoff,quality,by"schoolcode")
sss2<-merge(cutoff,quality,size,by="schoolcode")
sss2<-merge(cutoff,quality,size,by.x="schoolcode",by.y="schoolcode",by.z="schoolcode")
View(sss2)
View(sss2)
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
#raarrange database to prepare for merge#
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
sss2<-cbind(cutoff,quality,size)
View(sss2)
keeps <- c("schoolcode", "cutoff","quality","size")
sss2<sss2[keeps]
sss2<-cbind(cutoff,quality,size)
keeps <- c("schoolcode", "cutoff","quality","size")
sss2<sss2[keeps]
sss2<-sss2[keeps]
View(sss2)
?left_join
sss2<-merge(cutoff,quality,size,by=c("col1","col2"),all.x = T)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
program=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
program=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
program=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
sss2<-merge(cutoff,quality,size,by=c("schoolcode","program"),all.x = T)
sss2<-merge(cutoff,quality,size,by=c("schoolcode","program"))
sss2<-merge(cutoff,quality,size,by="schoolcode"&"program")
library(dplyr)
install.packages("pillar", dependencies = FALSE)
install.packages("dplyr", dependencies = FALSE)
sss2<-left_join(cutoff , quality, by=c("schoolcode","program"))
library(dplyr)
library(dplyr)
library(pillar)
install.packages("pillar", dependencies = FALSE)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
View(cutoff)
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
View(cutoff)
ss2<-cbind(cutoff,quality,size)
View(ss2)
ss2 <- t( ss2 )
ss2<- unique( ss2 )
View(ss2)
ss2 <- t( ss2 )
ss2<- unique( ss2 )
ss2<- t( ss2 )
View(ss2)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
View(ss2)
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
View(ss2)
View(sss)
#merge the ss2 and  sss#
df = merge(sss, sss2, by.x = c("vec1", "vec2"), by.y = c("schoolcode", "j"))
data2<- merge(sss, sss2, by.x = c("vec1", "vec2"), by.y = c("schoolcode", "j"))
ss2 <- ss2[, !duplicated(colnames(ss2))]
ss2<-unique(ss2[,c('schoolcode','j')])
data2<- merge(sss, sss2, by.x = c("vec1", "vec2"), by.y = c("schoolcode", "j"))
sss$vec1<- with(sss, paste0(vec1, vec2))
View(sss)
ss2$schoolcode<- with(ss2, paste0(schoolcode, j))
#merge the ss2 and  sss#
data2<- merge(sss, sss2, by.x = "vec1", by.y = "schoolcode")
View(data2)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
ss2<-unique(ss2[,c('schoolcode','j')])
sss$vec1<- with(sss, paste0(vec1, vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode, j))
data2<- merge(sss, sss2, by.x = "vec1", by.y = "schoolcode")
View(data2)
View(ss2)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
ss2<-unique(ss2[,c('schoolcode','j')])
View(ss2)
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
View(ss2)
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
View(sss2)
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
#raarrange database to prepare for merge#
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
View(ss2)
ss2 <- ss2[, !duplicated(colnames(ss2))]
View(ss2)
sss$vec1<- with(sss, paste0(vec1, vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode, j))
View(ss2)
data2<- merge(sss, sss2, by.x = "vec1", by.y = "schoolcode")
View(data2)
data2<- merge(sss, ss2, by.x = "vec1", by.y = "schoolcode")
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
#raarrange database to prepare for merge#
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
#merge the ss2 and  sss#
sss$vec1<- with(sss, paste0(vec1, vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode, j))
data2<- merge(sss, ss2, by.x = "vec1", by.y = "schoolcode")
View(data2)
data2<- merge(ss2, ss2, by.x = "schoolcode", by.y = "vec1")
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1")
View(data2)
sss<-as.data.frame(sss)
ss3<-as.data.frame(ss2)
sss$vec1<- with(sss, paste0(vec1, vec2,sep=","))
View(sss)
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
View(sss)
library(readr)
datsss <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datsss.csv",na.string=c("","NA"))
datjss<- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datjss.csv",na.string=c("","NA"))
datsss<- datsss[!is.na(datsss$schoolname), ]
datsss<- datsss[!duplicated(datsss[,c('schoolcode')]),]
datsss$X <- NULL
#merge with the choice#
sss <- merge(Choice1, datsss, by.x = "vec1", by.y = "schoolcode")
View(sss)
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
View(sss)
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode,sep=",", j))
sss<-as.data.frame(sss)
ss3<-as.data.frame(ss2)
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1")
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1",all=TRUE)
View(data2)
data2<- na.omit(data2, cols="schoolname")
View(data2)
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode,sep=",", j))
sss<-as.data.frame(sss)
ss3<-as.data.frame(ss2)
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1",all=TRUE)
ss2 <- ss2[, !duplicated("j")]
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode,sep=",", j))
sss<-as.data.frame(sss)
ss3<-as.data.frame(ss2)
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1",all=TRUE)
data2 <- data2[, !duplicated("j")]
View(data2)
data2 <- data2[ -c(2,6) ]
View(data2)
colnames(data2)[colnames(data2)=="schoolcode"] <- "schoolprogram"
View(data2)
data2<-data2[!data2$cutoff == NA, ]
View(data2)
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode,sep=",", j))
sss<-as.data.frame(sss)
ss3<-as.data.frame(ss2)
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1",all=TRUE)
data2 <- data2[ -c(2,6) ]
colnames(data2)[colnames(data2)=="schoolcode"] <- "schoolprogram"
data2<-data2[!data2$cutoff = NA, ]
data2<-data2[!datstu$cutoff == "NA", ]
View(data2)
data2<-data2[!data2$cutoff == "NA", ]
View(data2)
datstu <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datstu.csv",na.string=c("","NA"))
datstu<- na.omit(datstu, cols="rankplace")
datstu<-datstu[!datstu$rankplace == "99", ]
#match the ranking with the schoolcode#
admit_school=c()
for (i in 1:dim(datstu)[1]) {
admit_school[i]=datstu[i,(datstu$rankplace+4)[i]]
}
library(readr)
datsss <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datsss.csv",na.string=c("","NA"))
datjss<- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datjss.csv",na.string=c("","NA"))
datsss<- datsss[!is.na(datsss$schoolname), ]
datsss<- datsss[!duplicated(datsss[,c('schoolcode')]),]
datsss$X <- NULL
library(readr)
datsss <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datsss.csv",na.string=c("","NA"))
datjss<- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datjss.csv",na.string=c("","NA"))
datsss<- datsss[!is.na(datsss$schoolname), ]
datsss<- datsss[!duplicated(datsss[,c('schoolcode')]),]
datsss$X <- NULL
#merge with the choice#
sss <- merge(Choice1, datsss, by.x = "vec1", by.y = "schoolcode")
View(sss)
#delete invalid ranking with na and 99#
datstu <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datstu.csv",na.string=c("","NA"))
datstu<- na.omit(datstu, cols="rankplace")
datstu<-datstu[!datstu$rankplace == "99", ]
admit_school=c()
for (i in 1:dim(datstu)[1]) {
admit_school[i]=datstu[i,(datstu$rankplace+4)[i]]
}
# clear console#
cat("\014")
# clear workspace#
rm(list=ls())
setwd("C:/Users/cuiti/Master Study/Second Semester/econometrics/TIANYUCUI")
# import the database for question 1#
library(readr)
datstu <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datstu.csv",na.string=c("","NA"))
# question1.1:observation of student#
nrow(datstu)
# question1.2:number of schools #
#select the schoolcode varaibles#
Nschool<-c("schoolcode1","schoolcode2","schoolcode3","schoolcode4","schoolcode5","schoolcode6")
School <- datstu[,5:10]
vec1 <- c(as.matrix(School))
Nschool<-unique(vec1)
#replace Nschool by dropping NA in the data set#
Nschool <- Nschool[ !is.na(Nschool ) ]
length(Nschool)
# question1.3:number of programs#
Nprogram<-c("choicepgm1","choicepgm2","choicepgm3","choicepgm4","choicepgm5","choicepgm6")
Program<-datstu[Nprogram]
vec2 <- c(as.matrix(Program))
Nprogram<-unique(vec2)
Nprogram<-Nprogram[ !is.na( Nprogram)]
length(Nprogram)
# question 1.4: number of choices#
Choice1<- cbind(vec1,vec2)
Choice1<-unique(Choice1)
Choice1<-na.omit(Choice1)
nrow(Choice1)
#question 1.5:missing test score#
Score <- c("score")
Score<-datstu[Score]
Score<- as.vector(Score)
#number of rows in overal database#
nrow(Score)
#number of rows that omit the missing values#
Scorefull<-na.omit(Score)
nrow(Scorefull)
#the difference should be the number of missing values#
nrow(Score)-nrow(Scorefull)
#question 1.6 apply to the same schools-meaning1#
School1<-apply(datstu[,5:10],1,function(x) length(x[!is.na(x)])-length(unique(x[!is.na(x)])))
length(School1[School1!=0])
#question 1.6 apply to the same schools-meaning2#
School2<-datstu[,c(5:10)]
vec5<-c(as.matrix(School2))
ID<-rep(1:340823,6)
ID<-as.vector(ID)
School3<-cbind(ID,vec5)
View(School3)
X<-unique(School3[,c('ID','vec5')])
table(X[,2])
#question 1.7 apply to less than 6 choices#
Nprogram<-datstu[,c(11:16)]
nrow(Nprogram)
#omit the rows that have no value#
Program <- na.omit(Nprogram)
View(Program)
nrow(Program)
c1<-nrow(Nprogram)-nrow(Program)
Nschool1<-datstu[,c(5:10)]
nrow(Nschool1)
school1<-na.omit(Nschool1)
nrow(school1)
c2<-nrow(Nschool1)-nrow(school1)
max(c1,c2)
#question2#
library(readr)
datsss <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datsss.csv",na.string=c("","NA"))
datjss<- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datjss.csv",na.string=c("","NA"))
datsss<- datsss[!is.na(datsss$schoolname), ]
datsss<- datsss[!duplicated(datsss[,c('schoolcode')]),]
datsss$X <- NULL
#merge with the choice#
sss <- merge(Choice1, datsss, by.x = "vec1", by.y = "schoolcode")
View(sss)
#delete invalid ranking with na and 99#
datstu <- read.csv("C:/Users/cuiti/Master Study/Second Semester/econometrics/dat/datstu.csv",na.string=c("","NA"))
datstu<- na.omit(datstu, cols="rankplace")
datstu<-datstu[!datstu$rankplace == "99", ]
#match the ranking with the schoolcode#
admit_school=c()
for (i in 1:dim(datstu)[1]) {
admit_school[i]=datstu[i,(datstu$rankplace+4)[i]]
}
datstu=cbind(datstu,admit_school)
colnames(datstu)[colnames(datstu)=="admit_school"] <- "schoolcode"
#match rank with the program code#
admit_program=c()
for (i in 1:dim(datstu)[1]) {
admit_program[i]=as.character(datstu[i,(datstu$rankplace[i]+10)])
}
datstu=cbind(datstu,admit_program)
colnames(datstu)[colnames(datstu)=="admit_program"] <- "program"
#find the minimum score, average score,and size#
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
quality<-tapply(stu$score,list(stu$schoolcode,stu$program),mean)
size<-tapply(stu$score,list(stu$schoolcode,stu$program),length)
#raarrange database to prepare for merge#
cutoff <- data.frame(schoolcode=rep(row.names(cutoff),ncol(cutoff)),
j=rep(colnames(cutoff),each=nrow(cutoff)),
cutoff=as.vector(cutoff))
quality <- data.frame(schoolcode=rep(row.names(quality),ncol(quality)),
j=rep(colnames(quality),each=nrow(quality)),
quality=as.vector(quality))
size <- data.frame(schoolcode=rep(row.names(size),ncol(size)),
j=rep(colnames(size),each=nrow(size)),
size=as.vector(size))
ss2<-cbind(cutoff,quality,size)
ss2 <- ss2[, !duplicated(colnames(ss2))]
#merge the ss2 and  sss#
sss$vec1<- with(sss, paste0(vec1, sep=",",vec2))
ss2$schoolcode<- with(ss2, paste0(schoolcode,sep=",", j))
sss<-as.data.frame(sss)
ss3<-as.data.frame(ss2)
data2<- merge(ss2, sss, by.x = "schoolcode", by.y = "vec1",all=TRUE)
data2 <- data2[ -c(2,6) ]
colnames(data2)[colnames(data2)=="schoolcode"] <- "schoolprogram"
View(data2)
data2<-data2[!data2$cutoff == "NA", ]
View(data2)
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
View(stu)
View(data2)
View(sss)
data2 <- na.omit(data2)
write.csv(data2,"question2table")
write.csv(data2,"question2table.csv")
View(datjss)
View(Choice1)
#question3#
Choice1$vec1<- with(Choice1, paste0(vec1,sep=",",vec2))
typeof(Choice1)
Choice1<-as.data.frame(Choice1)
Choice1$vec1<- with(Choice1, paste0(vec1,sep=",",vec2))
View(Choice1)
data3<-merge(Choice1,sss,by.x="vec1",by.y="vec1",all=TRUE)
View(data3)
data3<-na.omit(data3)
data3<-merge(data3,datjss,by.x="sssdistrict",by.y="jssdistrict",all=TRUE)
View(data3)
View(data3)
View(data2)
stu<-c("X","score","agey","male","schoolcode","program")
stu<-datstu[stu]
stu<-stu[with(stu, order(schoolcode, program)),]
cutoff<-tapply(stu$score, list(stu$schoolcode, stu$program), min)
View(cutoff)
View(datsss)
install.packages("dplyr")
library(dplyr)
install.packages('pillar')
install.packages('pillar')
install.packages("pillar")
library(dplyr)
library(pillar)
install.packages("pillar")
install.packages("pillar")
